<!DOCTYPE html>
<html lang="pt-br">
  <head>
    <title>Crowd Source Map</title>
    <meta charset="utf-8">
    <!--bootstrap-->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css" 
    integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh" crossorigin="anonymous">
    <!--<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css" 
    integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh" 
    crossorigin="anonymous"> -->
    
    <!--leaflet-->
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.6.0/dist/leaflet.css"
    integrity="sha512-xwE/Az9zrjBIphAcBb3F6JVqxf46+CDLwfLMHloNu6KEQCAWi6HcDUbeOfBIptF7tcCzusKFjFw2yuvEpDL9wQ=="
    crossorigin=""/>
    <script src="https://unpkg.com/leaflet@1.6.0/dist/leaflet.js"
    integrity="sha512-gZwIG9x3wUXg2hdXF6+rVkLF/0Vi9U8D2Ntg4Ga5I5BZpVkVxlJWbSQtXPSiUTtC0TjtGOmxa1AJPuV0CPthew=="
    crossorigin=""></script>
    <!--leaflet draw-->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/leaflet.draw/1.0.4/leaflet.draw.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/leaflet.draw/1.0.4/leaflet.draw.css">
    
    <style>
        #map { 
            width: 100%; 
            height: 580px; 
            border: 1px solid #AAA;
            display: hidden;

        }
    </style>

    
  </head>
  <body>
    <div class="mapContainer">
        <div id="map"></div>
    </div>
    <div class="contain">
        <form action="" method="POST" class="my-4 form-inline">
            <input required 
                type="text"
                name="info"
                id="inputInfo"
                class="form-control mr-2"
            >
            <button class="btn btn-success" onclick="saveObj()" type="submit">SAVE</button>
    
        </form>
    </div>
    
    </body>

    <script>
        const obj = {};
        const initialCordinates = [-27.59, -48.54]; // Cordenadas de Florian√≥polis
        const initialZoom = 12;

        const map = L.map('map').setView(initialCordinates, initialZoom);

        const baseLayer = L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {
            attribution: '&copy; <a href="http://osm.org/copyright">OpenStreetMap</a>'
            }).addTo(map)

        const drawnItems = new L.FeatureGroup();
        map.addLayer(drawnItems);
        const drawControl = new L.Control.Draw({
            edit: {
                featureGroup: drawnItems
            }
        });
        map.addControl(drawControl);

        function saveObj() {
            console.log(obj);
        }

        map.on(L.Draw.Event.CREATED, (e) => {
            console.log(e);
            let type = e.layerType,
                layer = e.layer;
            // if (type === 'marker') {
            //     // Do marker specific actions
            // }
            obj.cords = layer.getLatLng();
            // Do whatever else you need to. (save to db; add to map etc)
            map.addLayer(layer);
        });

        map.on('draw:edited', function (e) {
            let layers = e.layers;
            layers.eachLayer(function (layer) {
                //do whatever you want; most likely save back to db
            });
        });

        // const toolbar = L.Toolbar();
        // toolbar.addToolbar(map);

        // const drawControl = new L.Control.Draw({
        //     draw: { 
        //         polyline: false,
        //         polygon: false,
        //         circle: false, 
        //         rectangle: false,
        //         marker: true,
        //         circlemarker: false,
        //     },
        //     edit: {
        //         featureGroup: drawnItems
        //     }
        // });
        // map.addControl(drawControl);


        // const editableLayers = new L.FeatureGroup();
        // map.addLayer(editableLayers);

        // const featureGroup = L.featureGroup().addTo(map);


    </script>

</html>